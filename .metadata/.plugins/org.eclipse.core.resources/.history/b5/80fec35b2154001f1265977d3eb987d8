package com.example.library.exceptions;

import java.time.LocalDateTime;
import java.util.NoSuchElementException;
import java.util.UUID;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class SystemExceptionHandler {
	private static final Logger logger = LoggerFactory.getLogger(SystemExceptionHandler.class);
	
	@ExceptionHandler({ BusinessLogicViolationException.class })
	public ResponseEntity<Object> handleBussinessLogicException(BusinessLogicViolationException ex) {
		ApiBusinessError apiBusinessError = new ApiBusinessError(UUID.randomUUID().toString(), LocalDateTime.now(),
				"BUSINESS_CONSTRAINT_VIOLATION", ex.getMessage(), ex.getDetails());
		logger.info("xxxxxxxxx   Exception : : : " + ex.getMessage());
		return new ResponseEntity<>(apiBusinessError, new HttpHeaders(), HttpStatus.UNPROCESSABLE_ENTITY);
	}

}
