package com.example.library.exceptions;

import java.time.LocalDateTime;
import java.util.NoSuchElementException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class SystemExceptionHandler {
	private static final Logger logger = LoggerFactory.getLogger(SystemExceptionHandler.class);
	
	@ExceptionHandler(NoSuchElementException.class)
	public ResponseEntity<Object> handleUpdatedElementNotFoundException(NoSuchElementException ex) {
		ApiError apiError = new ApiError(UUID.randomUUID().toString(), LocalDateTime.now(),
				ApiErrorCodeEnum.INTERNAL_SERVER_ERROR.name(), ApiErrorMessageKeyEnum.REFRENCE_ID_NOT_FOUND.name());
		logger.info("xxxxxxxxx   Exception : : : " + ex.getMessage());
		return new ResponseEntity<>(apiError, new HttpHeaders(), HttpStatus.INTERNAL_SERVER_ERROR);
	}

}
