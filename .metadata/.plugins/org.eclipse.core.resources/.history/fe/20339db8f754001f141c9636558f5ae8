package com.example.library.security;

import java.security.Key;
import java.util.function.Function;

import org.springframework.stereotype.Service;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;

@Service
public class JwtService {

	private static final String SECRETE_KEY = "3576302d76785f284b4e244359455861385d752a3c4d4f7d464f474657";
	
	
	public String extractUsername(String token) {
		
		return extractClaim(token,Claims::getSubject);
	}
	
	public <T> T extractClaim(String token , Function<Claims , T> claimsResolver) {
		
		final Claims claims = extractAllClaims(token);
		return claimsResolver.apply(claims);
	}
	
	private Claims extractAllClaims(String token) {
		
		return Jwts
			.parserBuilder()
			.setSigningKey(getSignInKey())
			.build()
			.parseClaimsJws(token)
			.getBody();
	}
	
	private Key getSignInKey() {
		
		byte[] keyBytes = Decoders.BASE64.decode(SECRETE_KEY);
		return Keys.hmacShaKeyFor(keyBytes);
	}
}
